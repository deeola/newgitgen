{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport AuthContext from \"../context/auth/authContext\";\nimport AlertContext from \"../context/alert/alertContext\";\nimport axios from \"axios\";\n\nconst useSubscribe = (callback, ValidateSubscribe) => {\n  _s();\n\n  //GENERAL\n  const [error, setError] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false); //SIGN IN\n\n  const [subscribeValues, setSignValues] = useState({\n    email: \"\"\n  });\n\n  const handleChangeSubscribe = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSignValues({ ...subscribeValues,\n      [name]: value\n    });\n  };\n\n  const sub = subscribeValues; //Subscribe\n\n  const onSubmitSubscribe = async e => {\n    setError(ValidateSubscribe(subscribeValues)); // login(sub);\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/subscribe\", sub, config);\n      console.log(res.data);\n    } catch (err) {\n      console.log(error);\n    }\n\n    e.preventDefault();\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(error).length === 0 && isSubmitting) {\n      callback(); // history(\"/\");\n    } // eslint-disable-next-line\n\n  }, [error]);\n  return {\n    subscribeValues,\n    onSubmitSubscribe,\n    handleChangeSubscribe,\n    error\n  };\n};\n\n_s(useSubscribe, \"UGle4nmNuZlTTs59q8oAe+1ojGU=\");\n\nexport default useSubscribe;","map":{"version":3,"sources":["C:/Users/Adeola.bamigboye/Desktop/newgen/client/src/components/registration/useSubscribe.js"],"names":["useEffect","useState","useContext","useNavigate","AuthContext","AlertContext","axios","useSubscribe","callback","ValidateSubscribe","error","setError","isSubmitting","setIsSubmitting","subscribeValues","setSignValues","email","handleChangeSubscribe","e","name","value","target","sub","onSubmitSubscribe","config","headers","res","post","console","log","data","err","preventDefault","Object","keys","length"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,iBAAX,KAAiC;AAAA;;AACpD;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,KAAD,CAAhD,CAJoD,CAMpD;;AACA,QAAM,CAACa,eAAD,EAAkBC,aAAlB,IAAmCd,QAAQ,CAAC;AAChDe,IAAAA,KAAK,EAAE;AADyC,GAAD,CAAjD;;AAIA,QAAMC,qBAAqB,GAAIC,CAAD,IAAO;AACnC,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAN,IAAAA,aAAa,CAAC,EACZ,GAAGD,eADS;AAEZ,OAACK,IAAD,GAAQC;AAFI,KAAD,CAAb;AAID,GAND;;AAQA,QAAME,GAAG,GAAGR,eAAZ,CAnBoD,CAqBpD;;AAEA,QAAMS,iBAAiB,GAAG,MAAOL,CAAP,IAAa;AACrCP,IAAAA,QAAQ,CAACF,iBAAiB,CAACK,eAAD,CAAlB,CAAR,CADqC,CAErC;;AACA,UAAMU,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;;AAMA,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,IAAN,CAAW,YAAX,EAAyBL,GAAzB,EAA8BE,MAA9B,CAAlB;AAEAI,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;AACD,KAJD,CAIE,OAAOC,GAAP,EAAY;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYnB,KAAZ;AACD;;AACDQ,IAAAA,CAAC,CAACc,cAAF;AAEAnB,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAnBD;;AAqBAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiC,MAAM,CAACC,IAAP,CAAYxB,KAAZ,EAAmByB,MAAnB,KAA8B,CAA9B,IAAmCvB,YAAvC,EAAqD;AACnDJ,MAAAA,QAAQ,GAD2C,CAEnD;AACD,KAJa,CAKd;;AACD,GANQ,EAMN,CAACE,KAAD,CANM,CAAT;AAQA,SAAO;AACLI,IAAAA,eADK;AAELS,IAAAA,iBAFK;AAGLN,IAAAA,qBAHK;AAILP,IAAAA;AAJK,GAAP;AAMD,CA1DD;;GAAMH,Y;;AA4DN,eAAeA,YAAf","sourcesContent":["import { useEffect, useState, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport AuthContext from \"../context/auth/authContext\";\r\nimport AlertContext from \"../context/alert/alertContext\";\r\nimport axios from \"axios\";\r\n\r\nconst useSubscribe = (callback, ValidateSubscribe) => {\r\n  //GENERAL\r\n\r\n  const [error, setError] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  //SIGN IN\r\n  const [subscribeValues, setSignValues] = useState({\r\n    email: \"\",\r\n  });\r\n\r\n  const handleChangeSubscribe = (e) => {\r\n    const { name, value } = e.target;\r\n    setSignValues({\r\n      ...subscribeValues,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const sub = subscribeValues;\r\n\r\n  //Subscribe\r\n\r\n  const onSubmitSubscribe = async (e) => {\r\n    setError(ValidateSubscribe(subscribeValues));\r\n    // login(sub);\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\"/subscribe\", sub, config);\r\n\r\n      console.log(res.data);\r\n    } catch (err) {\r\n      console.log(error);\r\n    }\r\n    e.preventDefault();\r\n\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(error).length === 0 && isSubmitting) {\r\n      callback();\r\n      // history(\"/\");\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [error]);\r\n\r\n  return {\r\n    subscribeValues,\r\n    onSubmitSubscribe,\r\n    handleChangeSubscribe,\r\n    error,\r\n  };\r\n};\r\n\r\nexport default useSubscribe;\r\n"]},"metadata":{},"sourceType":"module"}