{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport AuthContext from \"../context/auth/authContext\";\nimport AlertContext from \"../context/alert/alertContext\";\n\nconst useForm = (callback, Validate) => {\n  _s();\n\n  const history = useNavigate();\n  const authContext = useContext(AuthContext);\n  const alertContext = useContext(AlertContext);\n  const {\n    setAlert\n  } = alertContext;\n  const {\n    login,\n    myerror,\n    clearErrors,\n    isAuthenticated\n  } = authContext; //GENERAL\n\n  const [error, setError] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false); //SIGN IN\n\n  const [signValues, setSignValues] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const handleChangeSign = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSignValues({ ...signValues,\n      [name]: value\n    });\n  };\n\n  const users = signValues;\n  useEffect(() => {\n    if (isAuthenticated) {\n      history(\"/userprofile\");\n    }\n\n    if (myerror === \"Invalid Credentials\") {\n      setAlert(myerror, \"danger\");\n      clearErrors();\n    } // eslint-disable-next-line\n\n  }, [myerror, isAuthenticated, history]); //Login\n\n  const onSubmitSignin = e => {\n    setError(Validate(signValues));\n    login(users);\n    e.preventDefault();\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(error).length === 0 && isSubmitting) {\n      callback(); // history(\"/\");\n    } // eslint-disable-next-line\n\n  }, [error]);\n  return {\n    signValues,\n    onSubmitSignin,\n    handleChangeSign,\n    error\n  };\n};\n\n_s(useForm, \"RSeJk/uYEsr0Km6/M/0y+yCe0rg=\", false, function () {\n  return [useNavigate];\n});\n\nexport default useForm;","map":{"version":3,"sources":["C:/Users/Adeola.bamigboye/Desktop/newgen/client/src/components/registration/useForm.js"],"names":["useEffect","useState","useContext","useNavigate","AuthContext","AlertContext","useForm","callback","Validate","history","authContext","alertContext","setAlert","login","myerror","clearErrors","isAuthenticated","error","setError","isSubmitting","setIsSubmitting","signValues","setSignValues","email","password","handleChangeSign","e","name","value","target","users","onSubmitSignin","preventDefault","Object","keys","length"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;;AAEA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAAA;;AACtC,QAAMC,OAAO,GAAGN,WAAW,EAA3B;AAEA,QAAMO,WAAW,GAAGR,UAAU,CAACE,WAAD,CAA9B;AACA,QAAMO,YAAY,GAAGT,UAAU,CAACG,YAAD,CAA/B;AAEA,QAAM;AAAEO,IAAAA;AAAF,MAAeD,YAArB;AACA,QAAM;AAAEE,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA,WAAlB;AAA+BC,IAAAA;AAA/B,MAAmDN,WAAzD,CAPsC,CAStC;;AAEA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACkB,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC,KAAD,CAAhD,CAZsC,CActC;;AACA,QAAM,CAACoB,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAC;AAC3CsB,IAAAA,KAAK,EAAE,EADoC;AAE3CC,IAAAA,QAAQ,EAAE;AAFiC,GAAD,CAA5C;;AAKA,QAAMC,gBAAgB,GAAIC,CAAD,IAAO;AAC9B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAP,IAAAA,aAAa,CAAC,EACZ,GAAGD,UADS;AAEZ,OAACM,IAAD,GAAQC;AAFI,KAAD,CAAb;AAID,GAND;;AAQA,QAAME,KAAK,GAAGT,UAAd;AAIArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,eAAJ,EAAqB;AACpBP,MAAAA,OAAO,CAAC,cAAD,CAAP;AACA;;AACD,QAAIK,OAAO,KAAK,qBAAhB,EAAuC;AACrCF,MAAAA,QAAQ,CAACE,OAAD,EAAU,QAAV,CAAR;AACAC,MAAAA,WAAW;AACZ,KAPa,CASd;;AACD,GAVQ,EAUN,CAACD,OAAD,EAAUE,eAAV,EAA2BP,OAA3B,CAVM,CAAT,CAhCsC,CA4CtC;;AAEA,QAAMsB,cAAc,GAAIL,CAAD,IAAO;AAC5BR,IAAAA,QAAQ,CAACV,QAAQ,CAACa,UAAD,CAAT,CAAR;AACAR,IAAAA,KAAK,CAACiB,KAAD,CAAL;AACAJ,IAAAA,CAAC,CAACM,cAAF;AAEAZ,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAND;;AAQApB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiC,MAAM,CAACC,IAAP,CAAYjB,KAAZ,EAAmBkB,MAAnB,KAA8B,CAA9B,IAAmChB,YAAvC,EAAqD;AACnDZ,MAAAA,QAAQ,GAD2C,CAEnD;AACD,KAJa,CAKd;;AACD,GANQ,EAMN,CAACU,KAAD,CANM,CAAT;AAQA,SAAO;AACLI,IAAAA,UADK;AAELU,IAAAA,cAFK;AAGLN,IAAAA,gBAHK;AAILR,IAAAA;AAJK,GAAP;AAMD,CApED;;GAAMX,O;UACYH,W;;;AAqElB,eAAeG,OAAf","sourcesContent":["import { useEffect, useState, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport AuthContext from \"../context/auth/authContext\";\r\nimport AlertContext from \"../context/alert/alertContext\";\r\n\r\nconst useForm = (callback, Validate) => {\r\n  const history = useNavigate();\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { setAlert } = alertContext;\r\n  const { login, myerror, clearErrors, isAuthenticated } = authContext;\r\n\r\n  //GENERAL\r\n\r\n  const [error, setError] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  //SIGN IN\r\n  const [signValues, setSignValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChangeSign = (e) => {\r\n    const { name, value } = e.target;\r\n    setSignValues({\r\n      ...signValues,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const users = signValues;\r\n\r\n\r\n  \r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n     history(\"/userprofile\");\r\n    }\r\n    if (myerror === \"Invalid Credentials\") {\r\n      setAlert(myerror, \"danger\");\r\n      clearErrors();\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [myerror, isAuthenticated, history]);\r\n\r\n  //Login\r\n\r\n  const onSubmitSignin = (e) => {\r\n    setError(Validate(signValues));\r\n    login(users);\r\n    e.preventDefault();\r\n    \r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(error).length === 0 && isSubmitting) {\r\n      callback();\r\n      // history(\"/\");\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [error]);\r\n\r\n  return {\r\n    signValues,\r\n    onSubmitSignin,\r\n    handleChangeSign,\r\n    error,\r\n  };\r\n};\r\n\r\nexport default useForm;\r\n"]},"metadata":{},"sourceType":"module"}